set $mod Mod4

set $terminal foot

input *  {
    xkb_layout fr
    xkb_variant oss
}

input * repeat_delay 250
input * repeat_rate 60


set $border_style pixel 2

# TODO: uncomment when the kernel and sway bugs are fixed
# # FOR RELOAD: updates the border of existing windows
# for_window [class=".*"] border $border_style
default_border $border_style
default_floating_border $border_style

# FOR RELOAD: updates the gaps of existing windows
gaps inner 0

hide_edge_borders both
smart_borders on

set $screen_left  "BNQ BenQ BL2410 GBC07084SL0"
set $screen_right "BNQ BenQ BL2410 GBC06817SL0"
set $wallpaper_left  Pictures/wallpaper_vertical.png
set $wallpaper_right Pictures/wallpaper_horizontal.png

output $screen_left  mode 1920x1080@60Hz transform 270 position 0,0
output $screen_right mode 1920x1080@60Hz position 1080,322

exec swaybg -o $screen_left  -i $wallpaper_left \
            -o $screen_right -i $wallpaper_right

input type:tablet_tool map_to_output $screen_right

font pango:Hack 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

focus_follows_mouse always

bindsym $mod+Return exec myxcwd $terminal --working-directory={} -e zsh

bindsym $mod+Shift+Return exec emacsclient -c -n -e '(switch-to-buffer nil)'
bindsym $mod+b exec firefox
bindsym $mod+Control+l exec swaylock -c 000000
bindsym $mod+Control+k exec keepassxc

# kill focused window
bindsym $mod+Shift+a kill

bindsym $mod+d exec j4-dmenu-desktop --dmenu="bemenu -i" --no-generic --term=$terminal --no-exec | xargs swaymsg exec --

# change focus
bindcode $mod+44 focus left
bindcode $mod+45 focus down
bindcode $mod+46 focus up
bindcode $mod+47 focus right

# alternatively, you can use the cursor keys:
bindcode $mod+113 focus left
bindcode $mod+116 focus down
bindcode $mod+111 focus up
bindcode $mod+114 focus right

# move focused window
bindcode $mod+Shift+44 move left
bindcode $mod+Shift+45 move down
bindcode $mod+Shift+46 move up
bindcode $mod+Shift+47 move right

# alternatively, you can use the cursor keys:
bindcode $mod+Shift+113 move left
bindcode $mod+Shift+116 move down
bindcode $mod+Shift+111 move up
bindcode $mod+Shift+114 move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+q focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindcode $mod+10 workspace number $ws1
bindcode $mod+11 workspace number $ws2
bindcode $mod+12 workspace number $ws3
bindcode $mod+13 workspace number $ws4
bindcode $mod+14 workspace number $ws5
bindcode $mod+15 workspace number $ws6
bindcode $mod+16 workspace number $ws7
bindcode $mod+17 workspace number $ws8
bindcode $mod+18 workspace number $ws9
bindcode $mod+19 workspace number $ws10


# move focused container to workspace
bindcode $mod+Shift+10 move container to workspace number $ws1
bindcode $mod+Shift+11 move container to workspace number $ws2
bindcode $mod+Shift+12 move container to workspace number $ws3
bindcode $mod+Shift+13 move container to workspace number $ws4
bindcode $mod+Shift+14 move container to workspace number $ws5
bindcode $mod+Shift+15 move container to workspace number $ws6
bindcode $mod+Shift+16 move container to workspace number $ws7
bindcode $mod+Shift+17 move container to workspace number $ws8
bindcode $mod+Shift+18 move container to workspace number $ws9
bindcode $mod+Shift+19 move container to workspace number $ws10

bindsym $mod+Shift+r reload
bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway?' -B 'Yes, exit sway' 'swaymsg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindcode 44 resize shrink width 10 px or 10 ppt
        bindcode 45 resize grow height 10 px or 10 ppt
        bindcode 46 resize shrink height 10 px or 10 ppt
        bindcode 47 resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindcode 113 resize shrink width 10 px or 10 ppt
        bindcode 116 resize grow height 10 px or 10 ppt
        bindcode 111 resize shrink height 10 px or 10 ppt
        bindcode 114 resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# i3 move a workspace to another monitor (multi monitor setup)
mode "move_workspace" {
        bindsym Up move workspace to output up
        bindsym Down move workspace to output down
        bindsym Left move workspace to output left
        bindsym Right move workspace to output right

        bindcode 44 move workspace to output left
        bindcode 45 move workspace to output down
        bindcode 46 move workspace to output up
        bindcode 47 move workspace to output right

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+o mode "move_workspace"

set $barbg #44475A
set $statbg #002B36
set $actext #F8F8F2
set $intext #BFBFBF

# class                 border  bground text    indicator child_border
client.focused          $barbg  $barbg  $actext $barbg    $barbg
client.focused_inactive #44475A #44475A $actext #44475A   #44475A
client.unfocused        #282A36 #282A36 $intext #282A36   #282A36
client.urgent           #44475A #FF5555 $actext #FF5555   #FF5555
client.placeholder      #282A36 #282A36 $actext #282A36   #282A36
client.background       #F8F8F2

bar {
  colors {
    background $barbg
    statusline $barbg
    separator  $barbg

    # kind             border   bg       text
    focused_workspace  $statbg  $statbg  $actext
    active_workspace   $barbg   $barbg   $actext
    inactive_workspace $barbg   $barbg   $intext
    urgent_workspace   #FF5555  #FF5555  #F8F8F2
    binding_mode       #FF5555  #FF5555  #F8F8F2
  }

  # prevent swaybar from starting, as waybar already starts with systemd
  swaybar_command true
}
