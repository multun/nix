(require 'package) ;; You might already have this line

(package-initialize)


(custom-set-variables
 '(ansi-color-names-vector
   ["#212526" "#ff4b4b" "#b4fa70" "#fce94f" "#729fcf" "#e090d7" "#8cc4ff" "#eeeeec"])
 '(column-number-mode t)
 '(custom-enabled-themes (quote (tsdh-dark)))
 '(inhibit-startup-screen t)
 '(scroll-bar-mode nil)
 '(menu-bar-mode nil)
 '(show-paren-mode t)
 '(tool-bar-mode nil)
 '(package-selected-packages
   (quote
    (flycheck-pyflakes multiple-cursors auto-complete csharp-mode yaml-mode flycheck-irony irony flycheck rainbow-delimiters pyvenv company-irony))))

; (require 'notmuch)

(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-<down>") 'shrink-window)
(global-set-key (kbd "S-C-<up>") 'enlarge-window)

(editorconfig-mode 1)

(setq c-default-style "bsd"
      c-basic-offset 4)
(setq-default indent-tabs-mode nil)

(add-to-list 'default-frame-alist
             '(font . "Terminus 8"))

(require 'which-key)
(which-key-mode)
;; enable rainbow delimiters (highlight braces)
(require 'rainbow-delimiters)
(add-hook 'prog-mode-hook 'rainbow-delimiters-mode)

;; CODING STYLE GLOBAL
;; warn on weird spacing / tabs
(require 'whitespace)
(setq require-final-newline t)
;; lines-tail
(setq whitespace-style '(face empty tabs trailing))
(global-whitespace-mode t)

; (require 'clang-format)
; (global-set-key (kbd "C-c i") 'clang-format-region)
; (global-set-key (kbd "C-c u") 'clang-format-buffer)

;; FLYCHECK / IRONY
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)

(add-hook 'c++-mode-hook 'flycheck-mode)
(add-hook 'c-mode-hook 'flycheck-mode)

(setq flycheck-python-flake8-executable "@emacs_python@")
(setq flycheck-python-pylint-executable "@emacs_python@")
(setq flycheck-python-pycompile-executable "@emacs_python@")
(add-to-list 'irony-additional-clang-options "-isystem @c_header_include_path@")
(add-hook 'python-mode-hook 'flycheck-mode)
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
(eval-after-load 'flycheck
  '(add-hook 'flycheck-mode-hook #'flycheck-irony-setup))
(eval-after-load 'company
  '(add-to-list 'company-backends 'company-irony))

(global-unset-key (kbd "C-z"))

;; myxcwd hack
(setq frame-title-format '("%f"))

(defun my-csharp-mode-hook ()
  (auto-complete-mode t)
  (setq tab-width 4)
  (setq indent-tabs-mode t)
  (setq whitespace-style '(face tabs trailing))
  (hs-minor-mode t)
  (electric-pair-mode 1)       ;; Emacs 24
  (electric-pair-local-mode 1)) ;; Emacs 25

(add-hook 'csharp-mode-hook 'my-csharp-mode-hook)

;; enable rainbow delimiters (highlight braces)
(require 'rainbow-delimiters)
(add-hook 'prog-mode-hook 'rainbow-delimiters-mode)

(require 'multiple-cursors)
(global-set-key (kbd "C-c RET") 'mc/edit-lines)

(defun insert-nbsp () (interactive)
  (insert (char-from-name "NO-BREAK SPACE")))
(global-set-key (kbd "M-SPC") 'insert-nbsp)

(defun increment-number-at-point ()
  (interactive)
  (skip-chars-backward "0-9")
  (or (looking-at "[0-9]+")
      (error "No number at point"))
  (replace-match (number-to-string (1+ (string-to-number (match-string 0))))))
(global-set-key (kbd "C-c +") 'increment-number-at-point)

(defun change-font-height (delta)
  (set-face-attribute 'default
                      (selected-frame)
                      :height (+ (face-attribute 'default :height) delta)))
(global-set-key (kbd "C-+") '(lambda () (interactive) (change-font-height +50)))
(global-set-key (kbd "C--") '(lambda () (interactive) (change-font-height -50)))
